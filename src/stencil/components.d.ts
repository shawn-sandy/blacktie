/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  CardElmContent as BtwCardElmContent
} from './components/btw-card-elm/btw-card-elm-content';

declare global {
  interface HTMLBtwCardElmContentElement extends BtwCardElmContent, HTMLStencilElement {
  }
  var HTMLBtwCardElmContentElement: {
    prototype: HTMLBtwCardElmContentElement;
    new (): HTMLBtwCardElmContentElement;
  };
  interface HTMLElementTagNameMap {
    "btw-card-elm-content": HTMLBtwCardElmContentElement;
  }
  interface ElementTagNameMap {
    "btw-card-elm-content": HTMLBtwCardElmContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "btw-card-elm-content": JSXElements.BtwCardElmContentAttributes;
    }
  }
  namespace JSXElements {
    export interface BtwCardElmContentAttributes extends HTMLAttributes {
      className?: string;
    }
  }
}


import {
  CardElmHeader as BtwCardElmHeader
} from './components/btw-card-elm/btw-card-elm-header';

declare global {
  interface HTMLBtwCardElmHeaderElement extends BtwCardElmHeader, HTMLStencilElement {
  }
  var HTMLBtwCardElmHeaderElement: {
    prototype: HTMLBtwCardElmHeaderElement;
    new (): HTMLBtwCardElmHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "btw-card-elm-header": HTMLBtwCardElmHeaderElement;
  }
  interface ElementTagNameMap {
    "btw-card-elm-header": HTMLBtwCardElmHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "btw-card-elm-header": JSXElements.BtwCardElmHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface BtwCardElmHeaderAttributes extends HTMLAttributes {
      className?: string;
    }
  }
}


import {
  CardElm as BtwCardElm
} from './components/btw-card-elm/btw-card-elm';

declare global {
  interface HTMLBtwCardElmElement extends BtwCardElm, HTMLStencilElement {
  }
  var HTMLBtwCardElmElement: {
    prototype: HTMLBtwCardElmElement;
    new (): HTMLBtwCardElmElement;
  };
  interface HTMLElementTagNameMap {
    "btw-card-elm": HTMLBtwCardElmElement;
  }
  interface ElementTagNameMap {
    "btw-card-elm": HTMLBtwCardElmElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "btw-card-elm": JSXElements.BtwCardElmAttributes;
    }
  }
  namespace JSXElements {
    export interface BtwCardElmAttributes extends HTMLAttributes {
      className?: string;
      title?: string;
    }
  }
}


import {
  ConfirmActions as BtwConfirmActions
} from './components/btw-confirm-actions/btw-confirm-actions';

declare global {
  interface HTMLBtwConfirmActionsElement extends BtwConfirmActions, HTMLStencilElement {
  }
  var HTMLBtwConfirmActionsElement: {
    prototype: HTMLBtwConfirmActionsElement;
    new (): HTMLBtwConfirmActionsElement;
  };
  interface HTMLElementTagNameMap {
    "btw-confirm-actions": HTMLBtwConfirmActionsElement;
  }
  interface ElementTagNameMap {
    "btw-confirm-actions": HTMLBtwConfirmActionsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "btw-confirm-actions": JSXElements.BtwConfirmActionsAttributes;
    }
  }
  namespace JSXElements {
    export interface BtwConfirmActionsAttributes extends HTMLAttributes {
      buttonType?: string;
      classes?: string;
      confirmLabel?: string;
      label?: string;
      timeout?: number;
      url?: string;
    }
  }
}


import {
  SvgElm as BtwSvgElm
} from './components/btw-svg-elm/btw-svg-elm';

declare global {
  interface HTMLBtwSvgElmElement extends BtwSvgElm, HTMLStencilElement {
  }
  var HTMLBtwSvgElmElement: {
    prototype: HTMLBtwSvgElmElement;
    new (): HTMLBtwSvgElmElement;
  };
  interface HTMLElementTagNameMap {
    "btw-svg-elm": HTMLBtwSvgElmElement;
  }
  interface ElementTagNameMap {
    "btw-svg-elm": HTMLBtwSvgElmElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "btw-svg-elm": JSXElements.BtwSvgElmAttributes;
    }
  }
  namespace JSXElements {
    export interface BtwSvgElmAttributes extends HTMLAttributes {
      classes?: string;
      icon?: string;
      iconUrl?: string;
    }
  }
}


import {
  TopAnchorContent as BtwTopAnchorContent
} from './components/btw-top-anchor/btw-top-anchor-content';

declare global {
  interface HTMLBtwTopAnchorContentElement extends BtwTopAnchorContent, HTMLStencilElement {
  }
  var HTMLBtwTopAnchorContentElement: {
    prototype: HTMLBtwTopAnchorContentElement;
    new (): HTMLBtwTopAnchorContentElement;
  };
  interface HTMLElementTagNameMap {
    "btw-top-anchor-content": HTMLBtwTopAnchorContentElement;
  }
  interface ElementTagNameMap {
    "btw-top-anchor-content": HTMLBtwTopAnchorContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "btw-top-anchor-content": JSXElements.BtwTopAnchorContentAttributes;
    }
  }
  namespace JSXElements {
    export interface BtwTopAnchorContentAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  BtwTopAnchor as BtwTopAnchor
} from './components/btw-top-anchor/btw-top-anchor';

declare global {
  interface HTMLBtwTopAnchorElement extends BtwTopAnchor, HTMLStencilElement {
  }
  var HTMLBtwTopAnchorElement: {
    prototype: HTMLBtwTopAnchorElement;
    new (): HTMLBtwTopAnchorElement;
  };
  interface HTMLElementTagNameMap {
    "btw-top-anchor": HTMLBtwTopAnchorElement;
  }
  interface ElementTagNameMap {
    "btw-top-anchor": HTMLBtwTopAnchorElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "btw-top-anchor": JSXElements.BtwTopAnchorAttributes;
    }
  }
  namespace JSXElements {
    export interface BtwTopAnchorAttributes extends HTMLAttributes {
      classes?: string;
    }
  }
}


import {
  MyFirstComponent as MyFirstComponent
} from './components/my-first-component/my-first-component';

declare global {
  interface HTMLMyFirstComponentElement extends MyFirstComponent, HTMLStencilElement {
  }
  var HTMLMyFirstComponentElement: {
    prototype: HTMLMyFirstComponentElement;
    new (): HTMLMyFirstComponentElement;
  };
  interface HTMLElementTagNameMap {
    "my-first-component": HTMLMyFirstComponentElement;
  }
  interface ElementTagNameMap {
    "my-first-component": HTMLMyFirstComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-first-component": JSXElements.MyFirstComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyFirstComponentAttributes extends HTMLAttributes {
      classname?: string;
      name?: string;
    }
  }
}


import {
  MyComponent as MyComponent
} from './template';

declare global {
  interface HTMLMyComponentElement extends MyComponent, HTMLStencilElement {
  }
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-component": JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      name?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
