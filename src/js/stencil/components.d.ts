/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  CardElmContent as CardElmContent
} from './components/card-elm/card-elm-content';

declare global {
  interface HTMLCardElmContentElement extends CardElmContent, HTMLStencilElement {
  }
  var HTMLCardElmContentElement: {
    prototype: HTMLCardElmContentElement;
    new (): HTMLCardElmContentElement;
  };
  interface HTMLElementTagNameMap {
    "card-elm-content": HTMLCardElmContentElement;
  }
  interface ElementTagNameMap {
    "card-elm-content": HTMLCardElmContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "card-elm-content": JSXElements.CardElmContentAttributes;
    }
  }
  namespace JSXElements {
    export interface CardElmContentAttributes extends HTMLAttributes {
      className?: string;
    }
  }
}


import {
  CardElmHeader as CardElmHeader
} from './components/card-elm/card-elm-header';

declare global {
  interface HTMLCardElmHeaderElement extends CardElmHeader, HTMLStencilElement {
  }
  var HTMLCardElmHeaderElement: {
    prototype: HTMLCardElmHeaderElement;
    new (): HTMLCardElmHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "card-elm-header": HTMLCardElmHeaderElement;
  }
  interface ElementTagNameMap {
    "card-elm-header": HTMLCardElmHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "card-elm-header": JSXElements.CardElmHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface CardElmHeaderAttributes extends HTMLAttributes {
      className?: string;
    }
  }
}


import {
  CardElm as CardElm
} from './components/card-elm/card-elm';

declare global {
  interface HTMLCardElmElement extends CardElm, HTMLStencilElement {
  }
  var HTMLCardElmElement: {
    prototype: HTMLCardElmElement;
    new (): HTMLCardElmElement;
  };
  interface HTMLElementTagNameMap {
    "card-elm": HTMLCardElmElement;
  }
  interface ElementTagNameMap {
    "card-elm": HTMLCardElmElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "card-elm": JSXElements.CardElmAttributes;
    }
  }
  namespace JSXElements {
    export interface CardElmAttributes extends HTMLAttributes {
      className?: string;
      title?: string;
    }
  }
}


import {
  MyFirstComponent as MyFirstComponent
} from './components/my-first-component/my-first-component';

declare global {
  interface HTMLMyFirstComponentElement extends MyFirstComponent, HTMLStencilElement {
  }
  var HTMLMyFirstComponentElement: {
    prototype: HTMLMyFirstComponentElement;
    new (): HTMLMyFirstComponentElement;
  };
  interface HTMLElementTagNameMap {
    "my-first-component": HTMLMyFirstComponentElement;
  }
  interface ElementTagNameMap {
    "my-first-component": HTMLMyFirstComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-first-component": JSXElements.MyFirstComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyFirstComponentAttributes extends HTMLAttributes {
      classname?: string;
      name?: string;
    }
  }
}


import {
  MyComponent as MyComponent
} from './template';

declare global {
  interface HTMLMyComponentElement extends MyComponent, HTMLStencilElement {
  }
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-component": JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      name?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
