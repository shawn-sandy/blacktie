{"version":3,"sources":["webpack:///./packages/blacktie-forms/src/components/input-container.vue?57a2","webpack:///./packages/blacktie-forms/src/mixins/input-container.js","webpack:///packages/blacktie-forms/src/components/input-container.vue","webpack:///./packages/blacktie-forms/src/components/input-container.vue?9ca5","webpack:///./packages/blacktie-forms/src/components/input-container.vue","webpack:///./packages/blacktie-forms/src/components/input-container.vue?dd4f","webpack:///./packages/blacktie-forms/src/components/input-container.vue?d341","webpack:///./packages/blacktie-forms/node_modules/popper.js/dist/esm/popper.js","webpack:///./packages/blacktie-forms/src/components/input-container.vue?1d02"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","_t","errorNotify","attrs","name","directives","rawName","value","expression","_v","_s","errorMsg","staticRenderFns","input_container","props","errorPlacement","type","String","default","data","showErrors","inputType","beforeDestroy","popper","destroy","methods","loadPopper","console","log","$refs","inWrapper","querySelector","undefined","Popper","children","inErrors","placment","scheduleUpdate","_this","msg","arguments","length","isValid","$nextTick","computed","input_containervue_type_script_lang_js_","mixins","components_input_containervue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","exports","module","__webpack_require__","push","i","_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_container_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_vue_style_loader_index_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_3_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_input_container_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","global","isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","setTimeout","supportsMicroTasks","debounce","isFunction","functionToCheck","getType","toString","call","getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","ownerDocument","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","obj","_extends","assign","source","hasOwnProperty","getClientRect","offsets","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","offset","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","_ref","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","findIndex","prop","cur","match","runModifiers","modifiers","ends","modifiersToRun","slice","forEach","warn","enabled","update","isDestroyed","arrowStyles","attributes","flipped","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","defaultView","attachToScrollParents","event","callback","scrollParents","isBody","addEventListener","passive","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","removeEventListeners","removeEventListener","cancelAnimationFrame","isNumeric","isNaN","isFinite","setStyles","unit","setAttributes","setAttribute","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","round","prefixedProperty","invertTop","invertLeft","x-placement","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets$arrow","_data$offsets","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","placements","validPlacements","clockwise","counter","index","concat","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","onLoad","Defaults","requestAnimationFrame","bind","jquery","Utils","PopperUtils","content","locals","add","sourceMap","shadowMode"],"mappings":"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","file":"js/chunk-9fe245e6.a46d70da.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-container\"},[_c('div',{ref:\"inWrapper\",staticClass:\"input-elm-wrapper\"},[_vm._t(\"default\",null,{errorNotify:_vm.errorNotify})],2),_vm._t(\"error-elm\",[_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showErrors),expression:\"showErrors\"}],ref:\"inErrors\",staticClass:\"error-msg\"},[_vm._v(\"\\n        \"+_vm._s(_vm.errorMsg)+\"\\n      \")])])])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @mixin\n */\nimport Popper from 'popper.js'\nexport default {\n  props: {\n    /**\n     * Positions the notification box\n     */\n    errorPlacement: {\n      type: String,\n      default: 'bottom-end'\n    }\n  },\n  data() {\n    return {\n      showErrors: false,\n      errorMsg: null,\n      inputType: null\n    }\n  },\n  beforeDestroy() {\n    this.popper.destroy()\n  },\n  methods: {\n    loadPopper() {\n      console.log('wrapper', this.$refs.inWrapper.querySelector('.input-elm'))\n      if (this.popper === undefined) {\n        this.popper = new Popper(\n          this.$refs.inWrapper.children[0],\n          this.$refs.inErrors,\n          {\n            placment: this.errorPlacement\n          }\n        )\n      } else {\n        this.popper.scheduleUpdate()\n      }\n    },\n    /**\n     * Process and displays the error notification\n     *\n     * @public\n     *\n     * @param {string} [msg=null] - The error msg\n     * @param {string} [type=null] - field type\n     * @param {bool} [isValid=null] - Field validation bool\n     * @return null\n     */\n    errorNotify(msg = null, type = null, isValid = null) {\n      console.log('msg', msg, isValid)\n      if (!msg) {\n        this.showErrors = false\n        this.errorMsg = ''\n        return\n      }\n      this.errorMsg = msg\n      this.inputType = type\n      this.showErrors = true\n      this.$nextTick(() => {\n        this.loadPopper()\n      })\n    }\n  },\n  computed: {}\n}\n","<template>\n  <div class=\"input-container\">\n    <div class=\"input-elm-wrapper\" ref=\"inWrapper\" >\n      <slot :errorNotify=\"errorNotify\"/>\n    </div>\n    <slot name=\"error-elm\">\n      <transition name=\"fade\">\n        <div ref=\"inErrors\" v-show=\"showErrors\" class=\"error-msg\">\n          {{ errorMsg }}\n        </div>\n      </transition>\n    </slot>\n  </div>\n</template>\n\n<script>\n/**\n * BlackTie input container with baked pop-up error notifications powered by popper.js\n */\nimport containerMixin from './../mixins/input-container.js'\nexport default {\n  name: 'InputContainer',\n  mixins: [containerMixin]\n}\n</script>\n<style lang=\"scss\">\n/* Enter and leave animations can use different */\n/* durations and timing functions.              */\n.fade-enter-active {\n  transition: opacity 0.5s;\n}\n.fade-enter /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input-container.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input-container.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input-container.vue?vue&type=template&id=60f5cbab&\"\nimport script from \"./input-container.vue?vue&type=script&lang=js&\"\nexport * from \"./input-container.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input-container.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"input-container.vue\"\nexport default component.exports","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.fade-enter-active{transition:opacity .5s\\n}\\n.fade-enter{opacity:0\\n}\", \"\"]);\n\n// exports\n","import mod from \"-!../../../../node_modules/vue-style-loader/index.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-3!../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input-container.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-3!../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input-container.vue?vue&type=style&index=0&lang=scss&\"","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-3!../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input-container.vue?vue&type=style&index=0&lang=scss&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"39ee143e\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"sourceRoot":""}